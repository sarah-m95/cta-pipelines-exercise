name: Deploy API to Azure App Service

on:
  push:
    branches: [ main ]
    paths: 
      - 'src/backend/**'
  workflow_dispatch:  # Allow manual triggering

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_PATH: 'src/backend/Cta.Exercise.sln'
  PROJECT_PATH: 'src/backend/Cta.Exercise.Service/Cta.Exercise.Service.csproj'
  AZURE_WEBAPP_PACKAGE_PATH: './publish'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production  # Use GitHub environment for additional protection
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Configure NuGet with Artifactory
      run: |
        dotnet nuget add source ${{ secrets.ARTIFACTORY_NUGET_URL }} \
          --name "Artifactory" \
          --username ${{ secrets.ARTIFACTORY_USERNAME }} \
          --password ${{ secrets.ARTIFACTORY_PASSWORD }} \
          --store-password-in-clear-text
        
    - name: Restore NuGet packages
      run: dotnet restore ${{ env.SOLUTION_PATH }} --source "Artifactory" --source "https://carmax.jfrog.io/artifactory/api/nuget/v3/nuget/index.json"
      
    - name: Build solution
      run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore
      
    - name: Run tests
      run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --no-build --verbosity normal --logger trx --results-directory ./test-results
      continue-on-error: false  # Fail deployment if tests fail
      
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()  # Run even if tests fail
      with:
        name: .NET Tests
        path: './test-results/*.trx'
        reporter: dotnet-trx
        
    - name: Publish application
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} \
          --configuration Release \
          --no-build \
          --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapp-package
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        slot-name: ${{ secrets.AZURE_WEBAPP_SLOT_NAME }}  # Optional: use 'production' if no slots
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        
    - name: Azure App Service Settings
      uses: azure/appservice-settings@v1
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        slot-name: ${{ secrets.AZURE_WEBAPP_SLOT_NAME }}  # Optional
        app-settings-json: |
          [
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "Production"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ]