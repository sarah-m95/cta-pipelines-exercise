name: Deploy Frontend to Azure Static Web App

on:
  push:
    branches: [ main ]
    paths: 
      - 'src/frontend/**'
  workflow_dispatch:  # Allow manual triggering

env:
  NODE_VERSION: '20.x'
  APP_LOCATION: 'src/frontend'  # Root location of app source code
  OUTPUT_LOCATION: 'dist'       # Location of build output relative to app location

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
        lfs: false
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '${{ env.APP_LOCATION }}/package-lock.json'
        
    - name: Configure npm authentication
      run: |
        # Debug: Check if variables are set (without exposing values)
        echo "Checking environment variables..."
        echo "ARTIFACTORY_USERNAME is set: ${{ vars.ARTIFACTORY_USERNAME != '' }}"
        echo "ARTIFACTORY_PASSWORD is set: ${{ secrets.ARTIFACTORY_PASSWORD != '' }}"
        echo "Username length: ${#ARTIFACTORY_USERNAME}"
        echo "Password length: ${#ARTIFACTORY_PASSWORD}"
        
        # Add authentication to the existing .npmrc file in the frontend directory
        cd ${{ env.APP_LOCATION }}
        
        # Create base64 encoded auth token (this is what npm often expects)
        AUTH_TOKEN=$(echo -n "${{ vars.ARTIFACTORY_USERNAME }}:${{ secrets.ARTIFACTORY_PASSWORD }}" | base64 -w 0)
        echo "//carmax.jfrog.io/artifactory/api/npm/npm/:_auth=${AUTH_TOKEN}" >> .npmrc
        
        # Display the .npmrc content (auth tokens will be masked by GitHub)
        echo "Contents of .npmrc:"
        cat .npmrc
        
        # Test authentication with a simple request
        echo "Testing authentication..."
        curl -u "${{ vars.ARTIFACTORY_USERNAME }}:${{ secrets.ARTIFACTORY_PASSWORD }}" \
          -s -o /dev/null -w "HTTP Status: %{http_code}" \
          "https://carmax.jfrog.io/artifactory/api/npm/npm/" || echo "Curl test failed"
      env:
        ARTIFACTORY_USERNAME: ${{ vars.ARTIFACTORY_USERNAME }}
        ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        
    - name: Install dependencies
      run: npm ci
      working-directory: ${{ env.APP_LOCATION }}
      
    - name: Build application
      run: npm run build
      working-directory: ${{ env.APP_LOCATION }}
      env:
        # Add any environment variables needed for build here
        NODE_ENV: production
        
    - name: Deploy to Azure Static Web App
      id: builddeploy
      uses: Azure/static-web-apps-deploy@v1
      with:
        # REQUIRED: Set this in GitHub repository secrets
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        
        # Repository configuration
        repo_token: ${{ secrets.GITHUB_TOKEN }}  # Used for GitHub integrations (auto-generated)
        action: "upload"
        
        # Application configuration
        app_location: ${{ env.APP_LOCATION }}      # App source code path
        output_location: ${{ env.OUTPUT_LOCATION }} # Built app content directory
        
        # Optional: API configuration (uncomment if you have Azure Functions API)
        # api_location: "api"  # Api source code path - optional
        
        # Skip API build if no API exists
        skip_api_build: true
